import { Resolver } from 'vite';
import { Header } from './markdown/plugins/header';
export declare type HeadConfig = [string, Record<string, string>] | [string, Record<string, string>, string];
export interface UserConfig<ThemeConfig = any> {
    base?: string;
    title?: string;
    description?: string;
    head?: HeadConfig[];
    themeConfig?: ThemeConfig;
}
export interface SiteConfig<ThemeConfig = any> {
    root: string;
    site: SiteData<ThemeConfig>;
    configPath: string;
    themeDir: string;
    outDir: string;
    tempDir: string;
    resolver: Resolver;
    pages: string[];
}
export interface SiteData<ThemeConfig = any> {
    title: string;
    description: string;
    base: string;
    head: HeadConfig[];
    themeConfig: ThemeConfig;
}
export interface PageData {
    title: string;
    frontmatter: Record<string, any>;
    headers: Header[];
    lastUpdated: number;
}
export declare function resolveConfig(root?: string): Promise<SiteConfig>;
export declare function resolveSiteData(root: string): Promise<SiteData>;
