"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const chalk_1 = __importDefault(require("chalk"));
const globby_1 = __importDefault(require("globby"));
const fs_1 = require("fs");
const pathResolver_1 = require("./utils/pathResolver");
const debug = require('debug')('vitepress:config');
const resolve = (root, file) => path_1.default.join(root, `.vitepress`, file);
async function resolveConfig(root = process.cwd()) {
    const site = await resolveSiteData(root);
    // resolve theme path
    const userThemeDir = resolve(root, 'theme');
    let themeDir;
    try {
        await fs_1.promises.stat(userThemeDir);
        themeDir = userThemeDir;
    }
    catch (e) {
        themeDir = path_1.default.join(__dirname, '../lib/theme-default');
    }
    const config = {
        root,
        site,
        themeDir,
        pages: await globby_1.default(['**.md'], { cwd: root, ignore: ['node_modules'] }),
        configPath: resolve(root, 'config.js'),
        outDir: resolve(root, 'dist'),
        tempDir: path_1.default.resolve(pathResolver_1.APP_PATH, 'temp'),
        resolver: pathResolver_1.createResolver(themeDir)
    };
    return config;
}
exports.resolveConfig = resolveConfig;
async function resolveSiteData(root) {
    // load user config
    const configPath = resolve(root, 'config.js');
    let hasUserConfig = false;
    try {
        await fs_1.promises.stat(configPath);
        hasUserConfig = true;
    }
    catch (e) { }
    // always delete cache first before loading config
    delete require.cache[configPath];
    const userConfig = hasUserConfig ? require(configPath) : {};
    if (hasUserConfig) {
        debug(`loaded config at ${chalk_1.default.yellow(configPath)}`);
    }
    else {
        debug(`no config file found.`);
    }
    return {
        title: userConfig.title || 'VitePress',
        description: userConfig.description || 'A VitePress site',
        base: userConfig.base || '/',
        head: userConfig.head || [],
        themeConfig: userConfig.themeConfig || {}
    };
}
exports.resolveSiteData = resolveSiteData;
